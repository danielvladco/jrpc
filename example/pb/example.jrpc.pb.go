// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example/pb/example.proto

package pb

import (
	encoding_json "encoding/json"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	google_golang_org_grpc_codes "google.golang.org/grpc/codes"
	google_golang_org_grpc_status "google.golang.org/grpc/status"
	math "math"
	net_http "net/http"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func ServiceHTTPServer(svc ServiceServer) net_http.Handler {
	mux := net_http.NewServeMux()
	mux.HandleFunc("/Service/Endpoint1", func(w net_http.ResponseWriter, r *net_http.Request) {
		req := &Endpoint1Req{}
		defer r.Body.Close()
		w.Header().Set("Content-Type", "application/json")
		if err := encoding_json.NewDecoder(r.Body).Decode(req); err != nil {
			w.WriteHeader(net_http.StatusBadRequest)
			fmt.Fprintf(w, "{%q:%q,%q:%q}", "error", err.Error(), "status", net_http.StatusText(net_http.StatusBadRequest))
			return
		}

		res, err := svc.Endpoint1(r.Context(), req)
		if err != nil {
			stt, _ := google_golang_org_grpc_status.FromError(err)
			st := map[google_golang_org_grpc_codes.Code]int{
				google_golang_org_grpc_codes.Canceled:           400,
				google_golang_org_grpc_codes.Unknown:            500,
				google_golang_org_grpc_codes.InvalidArgument:    400,
				google_golang_org_grpc_codes.DeadlineExceeded:   503,
				google_golang_org_grpc_codes.NotFound:           404,
				google_golang_org_grpc_codes.AlreadyExists:      409,
				google_golang_org_grpc_codes.PermissionDenied:   403,
				google_golang_org_grpc_codes.ResourceExhausted:  503,
				google_golang_org_grpc_codes.FailedPrecondition: 400,
				google_golang_org_grpc_codes.Aborted:            400,
				google_golang_org_grpc_codes.OutOfRange:         400,
				google_golang_org_grpc_codes.Unimplemented:      404,
				google_golang_org_grpc_codes.Internal:           500,
				google_golang_org_grpc_codes.Unavailable:        503,
				google_golang_org_grpc_codes.DataLoss:           500,
				google_golang_org_grpc_codes.Unauthenticated:    401,
			}[stt.Code()]
			b, _ := encoding_json.Marshal(stt.Details())
			w.WriteHeader(st)
			fmt.Fprintf(w, "{%q:%q,%q:%q, %q: %s}", "error", err.Error(), "status", stt.Code().String(), "details", b)
			return
		}

		if err := encoding_json.NewEncoder(w).Encode(res); err != nil {
			w.WriteHeader(net_http.StatusInternalServerError)
			fmt.Fprintf(w, "{%q:%q,%q:%q}", "error", err.Error(), "status", net_http.StatusText(net_http.StatusInternalServerError))
			return
		}
	})

	return mux
}
